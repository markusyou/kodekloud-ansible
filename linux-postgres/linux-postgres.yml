---
- hosts: db
  become: true

  vars_files:
    - vars.yml

  tasks:
    - name: install postgresql server and client
      yum:
        name:
          - postgresql-server
          - postgresql
          - postgresql-plpython
          - PyGreSQL
          - python-psycopg2
          - python-ipaddress
        state: present

    - set_fact:
        db_passwd_hash: "{{ db_passwd  | password_hash('sha256', 'mysecretsalt')  }}"

    - name: Create local database user id
      user:
        name: "{{ db_user }}"
        password: "{{ db_passwd_hash }}"

    - name: initalize postgresql-server
      shell: |
         /usr/bin/postgresql-setup initdb
      ignore_errors: yes

    - name: Update postgresql listen value
      lineinfile:
        dest: /var/lib/pgsql/data/postgresql.conf
        backup: yes
        regexp: "^listen_addresses"
        line: "listen_addresses  = '*'"
        state: present

   #local   kodekloud_db3   kodekloud_gem   md5
   #local   kodekloud_db3   all             md5     
   
    - name: update pg_hba.conf root
      postgresql_pg_hba:
        dest: /var/lib/pgsql/data/pg_hba.conf
        contype: local
        users: postgres
        method: trust
        
    - name: update pg_hba.conf dbuser
      postgresql_pg_hba:
        dest: /var/lib/pgsql/data/pg_hba.conf
        contype: local
        users: "{{ db_user }}"
        databases: "{{ db_name }}"

    - name: update all pg_hba.conf all
      postgresql_pg_hba:
        dest: /var/lib/pgsql/data/pg_hba.conf
        contype: local
        users: all
        databases: "{{ db_name }}"

# figure out syntax for absent

    - name: start postgresql server
      service:
        name: postgresql
        state: restarted

    - name: Create a new database
      become_user: postgres
      become: true
      postgresql_db:
        name: "{{ db_name }}"
        state: present
        #login_user: "{{ db_user }}"
        #login_password: "{{ db_passwd }}"

    - name: Create database user
      become_user: postgres
      become: true
      postgresql_user:
        name: "{{ db_user }}"
        password: "{{ db_passwd }}"
        priv: 'ALL'
        state: present
        db: "{{ db_name }}"

    - name: Select query to db with named local user credentials
      postgresql_query:
        db: "{{ db }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_passwd }}"
        query: "SELECT * FROM *  {{ db }}"

    - name: Select query to db from root user
      postgresql_query:
        db: "{{ db }}"
        query: "SELECT * FROM {{ db }} "
        
