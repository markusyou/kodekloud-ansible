---
#1. Create /var/www/html/sysops directory if doesn't exist.
#2. Add an user javed in htpasswd and set its password to ksH85UJjhb.
#3. There is a file /tmp/index.html placed on Jump Server. Copy the same to new directory you created, please make sure default document root should remain /var/www/html.

- name: Configure application servers for Apache Pam Auth
  gather_facts: false
  become: true
  hosts: apps
  vars:
    webdest: "/var/www/html/devops"
    webuser: "rose"
    webpass: "8FmzjvFU6S"
    websrc: "/tmp/index.html"

  tasks:
    - name: Set authorized key taken from file
      authorized_key:
        user: "{{ ansible_ssh_user }}"
        state: present
        key: "{{ lookup('file', '/home/thor/.ssh/id_rsa.pub') }}"

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
    #
    # above is for credential setup on target hosts
    # below is for actual task assignment
    #
    - name: Create a directory if it does not exist
      file:
        path: "{{ webdest }}"
        state: directory
        mode: '0777'
        owner: apache
        group: apache

    - name: Install package with repo enabled
      yum:
        name: "python-passlib"
        enablerepo: epel

    - name: Add a user to a .htpasswd ile and ensure permissions are set
      htpasswd:
        path: "{{ webdest }}/htpasswd"
        name: "{{ webuser }}"
        password: "{{ webpass }}"
        owner: apache
        group: apache
        mode: 0640

    - name: Ansible create file if it doesn't exist example
      file:
        path: "/etc/httpd/conf.d/devops.conf"
        state: touch

    - name: "#2 - part b - update apache config"
      blockinfile:
        path: "/etc/httpd/conf.d/devops.conf"
        block: |
          <Directory "/var/www/html/devops">
             AuthType Basic
             AuthName "Restricted Content"
             AuthUserFile /etc/apache2/htpasswd
             Require valid-user
          </Directory>
        backup: true
        insertafter: 'EOF'

    - name: "#3 Place {{ websrc }} in {{ webdest }} "
      copy:
        src: "{{ websrc }}"
        dest: "{{ webdest }}"
        owner: "apache"
        group: "apache"

    - name: Restart service httpd, in all cases
      service:
        name: httpd
        state: restarted

